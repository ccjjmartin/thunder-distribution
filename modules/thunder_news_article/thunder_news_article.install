<?php

/**
 * @file
 * The install file.
 */

use Drupal\user\Entity\Role;
use Drupal\Core\Config\FileStorage;

/**
 * Implements hook_install().
 *
 * If workflow module is enabled, we try to add the news article to the
 * editorial workflow.
 */
function thunder_news_article_install(): void {
  try {
    foreach (['editor', 'seo', 'restricted_editor'] as $roleName) {
      if (!$role = Role::load($roleName)) {
        continue;
      }

      $role->grantPermission('create news_article content')
        ->grantPermission('delete any news_article content')
        ->grantPermission('delete news_article revisions')
        ->grantPermission('delete own news_article content')
        ->grantPermission('edit any news_article content')
        ->grantPermission('edit own news_article content')
        ->grantPermission('view news_article revisions')
        ->save();

      if ($roleName === 'restricted_editor') {
        continue;
      }

      $role->grantPermission('revert news_article revisions')
        ->save();
    }

    if (\Drupal::moduleHandler()->moduleExists('simple_sitemap')) {
      $config_path = Drupal::service('extension.list.profile')->getPath('thunder') . '/config/install';
      $source = new FileStorage($config_path);
      $config_storage = \Drupal::service('config.storage');
      $config_storage->write('simple_sitemap.bundle_settings.article.node.news_article', $source->read('simple_sitemap.bundle_settings.article.node.news_article'));
    }
    if (\Drupal::moduleHandler()->moduleExists('access_unpublished')) {
      foreach (['anonymous', 'authenticated'] as $roleName) {
        if (!$role = Role::load($roleName)) {
          continue;
        }
        $role->grantPermission('access_unpublished node news_article')
          ->save();
      }
    }

    // Ignore, if workflow entity is not available.
    if (!\Drupal::entityTypeManager()->getDefinition('workflow', FALSE)) {
      return;
    }
    // Ignore, if editorial workflow is not available.
    if (!$editorialWorkflow = \Drupal::entityTypeManager()->getStorage('workflow')->load('editorial')) {
      return;
    }

    // Ignore, if news_article is already configured.
    $config = $editorialWorkflow->getTypePlugin()->getConfiguration();
    if (isset($config['entity_types']['node']['news_article'])) {
      return;
    }

    $config['entity_types']['node'][] = 'news_article';
    $editorialWorkflow->getTypePlugin()->setConfiguration($config);
    $editorialWorkflow->save();
  }
  catch (\Exception $e) {
    \Drupal::logger('thunder')->info(t('Could not add news_article content type to editorial workflow: "@message"', ['@message' => $e->getMessage()]));
    return;
  }
}

/* hook_update_n implementations should be in the profile instead of this
submodule. */
