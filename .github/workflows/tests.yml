name: Run distribution tests

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - 'package.json'
      - 'package-lock.json'
  schedule:
    - cron:  '0 6 * * *'

env:
  DRUPAL_TESTING_COMPOSER_PROJECT: thunder/thunder-project
  DRUPAL_TESTING_DATABASE_USER: root
  DRUPAL_TESTING_DATABASE_PASSWORD: root
  DRUPAL_TESTING_TEST_DUMP_FILE: db-dump.php
  DRUPAL_TESTING_DATABASE_ENGINE: mysql
  DRUPAL_TESTING_TEST_CODING_STYLES: false
  DRUPAL_TESTING_TEST_PROFILE: thunder
  DRUPAL_TESTING_HTTP_PORT: 8888
  DRUPAL_TESTING_VERBOSE: false
  DRUPAL_TESTING_VERSION: "^1.0.33"
  THUNDER_ADMIN_BRANCH: 4.x
  PHPSTAN_MEMORY_LIMIT: 4G
  DRUPAL_TESTING_PARALLEL_TESTING: true
  SIMPLETEST_BASE_URL: http://thunder-testing:8888
  SKIP_TEST_CLEANUP: true

jobs:

  build:

    runs-on: ubuntu-20.04

    services:
      mysql:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306

    strategy:
      matrix:
        PHP_VERSION: [ '7.4', '8.1' ]

    env:
      DRUPAL_TESTING_TEST_DEPRECATION: true

    steps:
      - uses: actions/checkout@v1

      - uses: shivammathur/setup-php@v2
        with:
          coverage: none
          php-version: ${{ matrix.PHP_VERSION }}
          extensions: Imagick

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-cache-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-cache-

      - name: Get build environment
        run: |
          composer global require thunder/drupal-testing:${DRUPAL_TESTING_VERSION}

      - name: Prepare the build
        run: test-drupal-project prepare_build

      - name: Add needed dependencies
        run: composer require "drupal/core-dev:~9.3.0" "phpspec/prophecy-phpunit:^2" --no-update --no-progress --working-dir=/tmp/test/thunder/install

      - name: Build the docroot
        run: test-drupal-project build

      - name: Get custom thunder_admin branch
        run: |
          rm -rf thunder_admin
          git clone --depth 1 --single-branch --branch "${THUNDER_ADMIN_BRANCH}" https://github.com/BurdaMagazinOrg/theme-thunder-admin.git thunder_admin
        working-directory: /tmp/test/thunder/install/docroot/themes/contrib

      - name: Test for deprecations
        run: test-drupal-project deprecation
        continue-on-error: true

      - name: Install drupal
        run: test-drupal-project install

      - name: Zip build
        run: cd /tmp/test; tar cfz build-${{ matrix.PHP_VERSION }}.tgz thunder; mv build-${{ matrix.PHP_VERSION }}.tgz ${GITHUB_WORKSPACE}

      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.PHP_VERSION }}
          path: build-${{ matrix.PHP_VERSION }}.tgz

  test-config:
    needs: build

    runs-on: ubuntu-20.04

    services:
      mysql:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
      selenium:
        image: selenium/standalone-chrome
        options: --shm-size 2g --add-host=thunder-testing:host-gateway --name selenium
        ports:
          - 4444:4444

    strategy:
      fail-fast: false
      matrix:
        PHP_VERSION: [ '8.1' ]
    steps:
      - uses: actions/checkout@v1

      - uses: shivammathur/setup-php@v2
        with:
          coverage: none
          php-version: ${{ matrix.PHP_VERSION }}
          extensions: :sodium, Imagick, gd, PDO, mysql, pdo_mysql, mbstring, xmlwriter, pdo, date, dom, filter, hash, json, pcre, session, SimpleXML, SPL, tokenizer, xml, curl

      - name: Add host
        run: echo "127.0.0.1 thunder-testing" | sudo tee -a /etc/hosts

      - name: Prepare fixtures
        run: docker cp ./tests/fixtures selenium:/fixtures

      - name: Get build environment
        run: composer global require thunder/drupal-testing:${DRUPAL_TESTING_VERSION}

      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: build-${{ matrix.PHP_VERSION }}

      - name: Unzip build artifact
        run: mkdir -p /tmp/test; tar xCfz /tmp/test build-${{ matrix.PHP_VERSION }}/build-${{ matrix.PHP_VERSION }}.tgz thunder; rm -rf build-${{ matrix.PHP_VERSION }}

      - name: Update the docroot
        run: |
          ls -alh
          composer require drupal/config_profile
          vendor/bin/drush cex
          cd docroot/profile/contrib/thunder
          git clean -fd
          git status

#   Start a debug session.
#   - name: Setup tmate session
#     uses: mxschmitt/action-tmate@v3
